<!DOCTYPE html>
<html>
  <head>
    <title>New Sails App</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    
    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/bootstrap-theme.css">
    <link rel="stylesheet" href="/styles/bootstrap.css">
    <link rel="stylesheet" href="/styles/corral.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
  </head>

  <body>
    <nav class="navbar navbar-default">
      <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand" href="/">Logo</a>
        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
          <ul class="nav navbar-nav">
            <li><a href="/">Corral</a></li>
            <% if (session.authenticated && session.user.admin) { %>
              <li><a href="/user/index">User Administration</a></li>
            <% } %>
          </ul>
          <ul class="nav navbar-nav navbar-right">
            <li>
              <% if (!session.authenticated) { %>
                <form action="/session/create" class="navbar-form">
                  <div class="form-group">
                    <input type="text" class="form-control" id="email" name="email" placeholder="Username or Email">
                  </div>
                  <div class="form-group">
                    <input type="password" class="form-control" id="pw" name="pw" placeholder="Password">
                  </div>
                  <input type="hidden" name="_csrf" value="<%= _csrf %>"/>
                  <button type="submit" class="btn btn-primary">Sign In</button>
                  <a href="/user/new" class="btn btn-success">Register</a>
                </form>
              <% } else { %>
                <form class="navbar-form">
                  Hello, 
                    <a href="/user/show/<%= session.user.id %>">
                      <%= session.user.firstName %> <%= session.user.lastName %>
                    </a>!
                  <a href="/session/signout" class="btn btn-primary">Sign Out</a>
                </form>
              <% } %> 
            </li>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div><!-- /.container-fluid -->
    </nav>
    
    <%- body %>
    
    <nav class="navbar navbar-default navbar-fixed-bottom">
      <div class="container">
        <div id="footerLeft" class="pull-left">
          <div>Access to your friends at your finger tips</div>
        </div>
        <div class="pull-right">
          By <a href="http://alex-bu.com">Alex Bu</a>
          <div>Application is still under construction</div>
        </div>
      </div>
    </nav>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/jquery.min.js"></script>
    <script src="/js/dependencies/angular.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/formValidator.js"></script>
    <script src="/js/jquery.validate.js"></script>
    <script src="/js/underscore-min.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
